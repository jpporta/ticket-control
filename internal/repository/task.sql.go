// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: task.sql

package repository

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const createTask = `-- name: CreateTask :one
INSERT INTO task (title, description, priority, created_by)
VALUES ($1, $2, $3, $4)
RETURNING id
`

type CreateTaskParams struct {
	Title       string
	Description pgtype.Text
	Priority    pgtype.Int4
	CreatedBy   int32
}

func (q *Queries) CreateTask(ctx context.Context, arg CreateTaskParams) (int32, error) {
	row := q.db.QueryRow(ctx, createTask,
		arg.Title,
		arg.Description,
		arg.Priority,
		arg.CreatedBy,
	)
	var id int32
	err := row.Scan(&id)
	return id, err
}

const totalTasksFromUserToday = `-- name: TotalTasksFromUserToday :one
SELECT COUNT(*) AS total FROM task 
WHERE created_by = $1 
AND DATE(created_at) = CURRENT_DATE
`

func (q *Queries) TotalTasksFromUserToday(ctx context.Context, createdBy int32) (int64, error) {
	row := q.db.QueryRow(ctx, totalTasksFromUserToday, createdBy)
	var total int64
	err := row.Scan(&total)
	return total, err
}
