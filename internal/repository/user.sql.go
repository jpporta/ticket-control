// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: user.sql

package repository

import (
	"context"
)

const createUser = `-- name: CreateUser :one
INSERT INTO public."user" (
		name,
		api_key
) VALUES ($1, $2)
RETURNING id
`

type CreateUserParams struct {
	Name   string
	ApiKey string
}

func (q *Queries) CreateUser(ctx context.Context, arg CreateUserParams) (int32, error) {
	row := q.db.QueryRow(ctx, createUser, arg.Name, arg.ApiKey)
	var id int32
	err := row.Scan(&id)
	return id, err
}

const getUserByKey = `-- name: GetUserByKey :one
select id from public."user" where api_key = $1
`

func (q *Queries) GetUserByKey(ctx context.Context, apiKey string) (int32, error) {
	row := q.db.QueryRow(ctx, getUserByKey, apiKey)
	var id int32
	err := row.Scan(&id)
	return id, err
}
